"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IExpiringMetaTxForwarder__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "metaTxHash",
                type: "bytes32",
            },
        ],
        name: "CanceledMetaTx",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "metaTxHash",
                type: "bytes32",
            },
        ],
        name: "ExecutedMetaTx",
        type: "event",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "from",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "to",
                        type: "address",
                    },
                    {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTimestamp",
                        type: "uint256",
                    },
                ],
                internalType: "struct IExpiringMetaTxForwarder.ExpiringMetaTx",
                name: "metaTx",
                type: "tuple",
            },
        ],
        name: "cancel",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "from",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "to",
                        type: "address",
                    },
                    {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTimestamp",
                        type: "uint256",
                    },
                ],
                internalType: "struct IExpiringMetaTxForwarder.ExpiringMetaTx",
                name: "metaTx",
                type: "tuple",
            },
            {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
            },
        ],
        name: "execute",
        outputs: [
            {
                internalType: "bytes",
                name: "returndata",
                type: "bytes",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "metaTxHash",
                type: "bytes32",
            },
        ],
        name: "metaTxWithHashIsExecutedOrCanceled",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
var IExpiringMetaTxForwarder__factory = /** @class */ (function () {
    function IExpiringMetaTxForwarder__factory() {
    }
    IExpiringMetaTxForwarder__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    IExpiringMetaTxForwarder__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    IExpiringMetaTxForwarder__factory.abi = _abi;
    return IExpiringMetaTxForwarder__factory;
}());
exports.IExpiringMetaTxForwarder__factory = IExpiringMetaTxForwarder__factory;
//# sourceMappingURL=IExpiringMetaTxForwarder__factory.js.map