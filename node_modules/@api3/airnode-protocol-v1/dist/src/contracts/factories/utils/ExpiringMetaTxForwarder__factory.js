"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExpiringMetaTxForwarder__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "metaTxHash",
                type: "bytes32",
            },
        ],
        name: "CanceledMetaTx",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "metaTxHash",
                type: "bytes32",
            },
        ],
        name: "ExecutedMetaTx",
        type: "event",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "from",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "to",
                        type: "address",
                    },
                    {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTimestamp",
                        type: "uint256",
                    },
                ],
                internalType: "struct IExpiringMetaTxForwarder.ExpiringMetaTx",
                name: "metaTx",
                type: "tuple",
            },
        ],
        name: "cancel",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "from",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "to",
                        type: "address",
                    },
                    {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTimestamp",
                        type: "uint256",
                    },
                ],
                internalType: "struct IExpiringMetaTxForwarder.ExpiringMetaTx",
                name: "metaTx",
                type: "tuple",
            },
            {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
            },
        ],
        name: "execute",
        outputs: [
            {
                internalType: "bytes",
                name: "returndata",
                type: "bytes",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        name: "metaTxWithHashIsExecutedOrCanceled",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
var _bytecode = "0x61014060405234801561001157600080fd5b50604080518082018252601781527f4578706972696e674d6574615478466f727761726465720000000000000000006020808301918252835180850190945260058452640312e302e360dc1b908401528151902060e08190527f06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c6101008190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6101088184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6080523060c052610120525061011d92505050565b60805160a05160c05160e0516101005161012051610cc761016c6000396000610841015260006108900152600061086b015260006107c4015260006107ee015260006108180152610cc76000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806353b3a0e9146100465780639cd98f501461006f578063e83a688814610084575b600080fd5b610059610054366004610a58565b6100b7565b6040516100669190610b3f565b60405180910390f35b61008261007d366004610b52565b61020a565b005b6100a7610092366004610b87565b60006020819052908152604090205460ff1681565b6040519015158152602001610066565b606060006100c4856102ac565b90506100d36020860186610ba0565b6001600160a01b031661011e85858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525086939250506104389050565b6001600160a01b0316146101795760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e617475726500000000000000000000000000000060448201526064015b60405180910390fd5b60405181907f21a3ff74a15d44b8f30ad1ee0774b65b86f1bff1e29938818a5d092a7d5674d990600090a26102016101b46040870187610bc9565b6101c16020890189610ba0565b6040516020016101d393929190610c10565b60408051601f198184030181529181526101f290880160208901610ba0565b6001600160a01b03169061045c565b95945050505050565b6102176020820182610ba0565b6001600160a01b0316336001600160a01b0316146102775760405162461bcd60e51b815260206004820152601960248201527f53656e646572206e6f74206d6574612d747820736f75726365000000000000006044820152606401610170565b610280816102ac565b6040517f76faa962e536b8049aa3d58c074226dc3892669e0529b6722b618abdc17a1a3f90600090a250565b60006103657feb7570743e0c7ddd184b4a7bbb0938300819da235addf7adbe52ac0fd355d6216102df6020850185610ba0565b6102ef6040860160208701610ba0565b6102fc6040870187610bc9565b60405161030a929190610c36565b6040805191829003822060208301959095526001600160a01b0393841690820152911660608083019190915260808201929092529084013560a082015260c001604051602081830303815290604052805190602001206104a7565b60008181526020819052604090205490915060ff16156103c75760405162461bcd60e51b815260206004820152601c60248201527f4d6574612d7478206578656375746564206f722063616e63656c6564000000006044820152606401610170565b4282606001351161041a5760405162461bcd60e51b815260206004820152600f60248201527f4d6574612d7478206578706972656400000000000000000000000000000000006044820152606401610170565b6000818152602081905260409020805460ff19166001179055919050565b60008060006104478585610516565b915091506104548161055b565b509392505050565b60606104a0838360006040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c656400008152506106c3565b9392505050565b60006105106104b46107b7565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b600080825160410361054c5760208301516040840151606085015160001a610540878285856108de565b94509450505050610554565b506000905060025b9250929050565b600081600481111561056f5761056f610c46565b036105775750565b600181600481111561058b5761058b610c46565b036105d85760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610170565b60028160048111156105ec576105ec610c46565b036106395760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610170565b600381600481111561064d5761064d610c46565b036106c05760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401610170565b50565b60608247101561073b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610170565b600080866001600160a01b031685876040516107579190610c75565b60006040518083038185875af1925050503d8060008114610794576040519150601f19603f3d011682016040523d82523d6000602084013e610799565b606091505b50915091506107aa878383876109a2565b925050505b949350505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561081057507f000000000000000000000000000000000000000000000000000000000000000046145b1561083a57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156109155750600090506003610999565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610969573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661099257600060019250925050610999565b9150600090505b94509492505050565b60608315610a11578251600003610a0a576001600160a01b0385163b610a0a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610170565b50816107af565b6107af8383815115610a265781518083602001fd5b8060405162461bcd60e51b81526004016101709190610b3f565b600060808284031215610a5257600080fd5b50919050565b600080600060408486031215610a6d57600080fd5b833567ffffffffffffffff80821115610a8557600080fd5b610a9187838801610a40565b94506020860135915080821115610aa757600080fd5b818601915086601f830112610abb57600080fd5b813581811115610aca57600080fd5b876020828501011115610adc57600080fd5b6020830194508093505050509250925092565b60005b83811015610b0a578181015183820152602001610af2565b50506000910152565b60008151808452610b2b816020860160208601610aef565b601f01601f19169290920160200192915050565b6020815260006104a06020830184610b13565b600060208284031215610b6457600080fd5b813567ffffffffffffffff811115610b7b57600080fd5b6107af84828501610a40565b600060208284031215610b9957600080fd5b5035919050565b600060208284031215610bb257600080fd5b81356001600160a01b03811681146104a057600080fd5b6000808335601e19843603018112610be057600080fd5b83018035915067ffffffffffffffff821115610bfb57600080fd5b60200191503681900382131561055457600080fd5b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b8183823760009101908152919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60008251610c87818460208701610aef565b919091019291505056fea26469706673582212200da2da531df3035b615ee83c60a712611413ea8407a7d97782fc4d762a561a6164736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var ExpiringMetaTxForwarder__factory = /** @class */ (function (_super) {
    __extends(ExpiringMetaTxForwarder__factory, _super);
    function ExpiringMetaTxForwarder__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    ExpiringMetaTxForwarder__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    ExpiringMetaTxForwarder__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    ExpiringMetaTxForwarder__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    ExpiringMetaTxForwarder__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    ExpiringMetaTxForwarder__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    ExpiringMetaTxForwarder__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    ExpiringMetaTxForwarder__factory.bytecode = _bytecode;
    ExpiringMetaTxForwarder__factory.abi = _abi;
    return ExpiringMetaTxForwarder__factory;
}(ethers_1.ContractFactory));
exports.ExpiringMetaTxForwarder__factory = ExpiringMetaTxForwarder__factory;
//# sourceMappingURL=ExpiringMetaTxForwarder__factory.js.map