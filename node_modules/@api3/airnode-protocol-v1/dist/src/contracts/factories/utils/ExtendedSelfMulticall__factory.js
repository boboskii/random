"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExtendedSelfMulticall__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "containsBytecode",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "getBalance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getBlockBasefee",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getBlockNumber",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getBlockTimestamp",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getChainId",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
            },
        ],
        name: "multicall",
        outputs: [
            {
                internalType: "bytes[]",
                name: "returndata",
                type: "bytes[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
            },
        ],
        name: "tryMulticall",
        outputs: [
            {
                internalType: "bool[]",
                name: "successes",
                type: "bool[]",
            },
            {
                internalType: "bytes[]",
                name: "returndata",
                type: "bytes[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b506106bf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80635989eaeb1161005b5780635989eaeb146100cf578063796b89b914610109578063ac9650d81461010f578063f8b2cb4f1461012f57600080fd5b80633408e4701461008d57806342cbb15c146100a2578063437b9116146100a85780634dcc19fe146100c9575b600080fd5b465b6040519081526020015b60405180910390f35b4361008f565b6100bb6100b636600461045c565b610157565b604051610099929190610556565b4861008f565b6100f96100dd3660046105af565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b6040519015158152602001610099565b4261008f565b61012261011d36600461045c565b6102bd565b60405161009991906105ec565b61008f61013d3660046105af565b73ffffffffffffffffffffffffffffffffffffffff163190565b606080828067ffffffffffffffff811115610174576101746105ff565b60405190808252806020026020018201604052801561019d578160200160208202803683370190505b5092508067ffffffffffffffff8111156101b9576101b96105ff565b6040519080825280602002602001820160405280156101ec57816020015b60608152602001906001900390816101d75790505b50915060005b818110156102b4573086868381811061020d5761020d610615565b905060200281019061021f919061062b565b60405161022d929190610679565b600060405180830381855af49150503d8060008114610268576040519150601f19603f3d011682016040523d82523d6000602084013e61026d565b606091505b5085838151811061028057610280610615565b6020026020010185848151811061029957610299610615565b602090810291909101019190915290151590526001016101f2565b50509250929050565b6060818067ffffffffffffffff8111156102d9576102d96105ff565b60405190808252806020026020018201604052801561030c57816020015b60608152602001906001900390816102f75790505b50915060005b818110156104545760003086868481811061032f5761032f610615565b9050602002810190610341919061062b565b60405161034f929190610679565b600060405180830381855af49150503d806000811461038a576040519150601f19603f3d011682016040523d82523d6000602084013e61038f565b606091505b508584815181106103a2576103a2610615565b602090810291909101015290508061044b5760008483815181106103c8576103c8610615565b602002602001015190506000815111156103e55780518082602001fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4d756c746963616c6c3a204e6f2072657665727420737472696e670000000000604482015260640160405180910390fd5b50600101610312565b505092915050565b6000806020838503121561046f57600080fd5b823567ffffffffffffffff8082111561048757600080fd5b818501915085601f83011261049b57600080fd5b8135818111156104aa57600080fd5b8660208260051b85010111156104bf57600080fd5b60209290920196919550909350505050565b600081518084526020808501808196508360051b810191508286016000805b86811015610548578385038a5282518051808752835b81811015610521578281018901518882018a01528801610506565b5086810188018490529a87019a601f01601f191690950186019450918501916001016104f0565b509298975050505050505050565b604080825283519082018190526000906020906060840190828701845b82811015610591578151151584529284019290840190600101610573565b505050838103828501526105a581866104d1565b9695505050505050565b6000602082840312156105c157600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146105e557600080fd5b9392505050565b6020815260006105e560208301846104d1565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261064257600080fd5b83018035915067ffffffffffffffff82111561065d57600080fd5b60200191503681900382131561067257600080fd5b9250929050565b818382376000910190815291905056fea2646970667358221220a040bc63b099b9999fc15a4bad2d9d112296c7aa73a3ecad0d864af9adc0828164736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var ExtendedSelfMulticall__factory = /** @class */ (function (_super) {
    __extends(ExtendedSelfMulticall__factory, _super);
    function ExtendedSelfMulticall__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    ExtendedSelfMulticall__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    ExtendedSelfMulticall__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    ExtendedSelfMulticall__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    ExtendedSelfMulticall__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    ExtendedSelfMulticall__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    ExtendedSelfMulticall__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    ExtendedSelfMulticall__factory.bytecode = _bytecode;
    ExtendedSelfMulticall__factory.abi = _abi;
    return ExtendedSelfMulticall__factory;
}(ethers_1.ContractFactory));
exports.ExtendedSelfMulticall__factory = ExtendedSelfMulticall__factory;
//# sourceMappingURL=ExtendedSelfMulticall__factory.js.map