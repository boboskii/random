import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IExternalMulticall, IExternalMulticallInterface } from "../../../utils/interfaces/IExternalMulticall";
export declare class IExternalMulticall__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "targets";
            readonly type: "address[]";
        }, {
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "externalMulticall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "returndata";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "targets";
            readonly type: "address[]";
        }, {
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "tryExternalMulticall";
        readonly outputs: readonly [{
            readonly internalType: "bool[]";
            readonly name: "success";
            readonly type: "bool[]";
        }, {
            readonly internalType: "bytes[]";
            readonly name: "returndata";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): IExternalMulticallInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IExternalMulticall;
}
