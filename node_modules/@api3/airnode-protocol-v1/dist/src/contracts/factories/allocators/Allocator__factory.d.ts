import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { Allocator, AllocatorInterface } from "../../allocators/Allocator";
export declare class Allocator__factory {
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "airnode";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "slotIndex";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "ResetSlot";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "airnode";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "slotIndex";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "subscriptionId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "expirationTimestamp";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "SetSlot";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "SLOT_SETTER_ROLE_DESCRIPTION";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "airnodeToSlotIndexToSlot";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "subscriptionId";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "setter";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "expirationTimestamp";
            readonly type: "uint32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "airnode";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "slotIndex";
            readonly type: "uint256";
        }];
        readonly name: "resetSlot";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "airnode";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "slotIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "subscriptionId";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint32";
            readonly name: "expirationTimestamp";
            readonly type: "uint32";
        }];
        readonly name: "setSlot";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "airnode";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "slotIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "slotCanBeResetByAccount";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): AllocatorInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): Allocator;
}
