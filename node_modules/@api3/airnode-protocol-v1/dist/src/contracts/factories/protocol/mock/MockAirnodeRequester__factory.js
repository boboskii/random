"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockAirnodeRequester__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_airnodeProtocol",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "airnodeProtocol",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "requestId",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "fulfillRequest",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        name: "fulfillRequestAlwaysReverts",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        name: "fulfillRequestAlwaysRevertsWithNoString",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        name: "fulfillRequestAlwaysRunsOutOfGas",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "airnode",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "endpointOrTemplateId",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "parameters",
                type: "bytes",
            },
            {
                internalType: "address",
                name: "sponsor",
                type: "address",
            },
            {
                internalType: "bytes4",
                name: "fulfillFunctionId",
                type: "bytes4",
            },
        ],
        name: "makeRequest",
        outputs: [
            {
                internalType: "bytes32",
                name: "requestId",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "airnode",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "endpointOrTemplateId",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "parameters",
                type: "bytes",
            },
            {
                internalType: "address",
                name: "relayer",
                type: "address",
            },
            {
                internalType: "address",
                name: "sponsor",
                type: "address",
            },
            {
                internalType: "bytes4",
                name: "fulfillFunctionId",
                type: "bytes4",
            },
        ],
        name: "makeRequestRelayed",
        outputs: [
            {
                internalType: "bytes32",
                name: "requestId",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        name: "requestIdToData",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
var _bytecode = "0x60a060405234801561001057600080fd5b50604051610d7d380380610d7d83398101604081905261002f9161009c565b806001600160a01b03811661008a5760405162461bcd60e51b815260206004820152601c60248201527f4169726e6f646550726f746f636f6c2061646472657373207a65726f00000000604482015260640160405180910390fd5b6001600160a01b0316608052506100cc565b6000602082840312156100ae57600080fd5b81516001600160a01b03811681146100c557600080fd5b9392505050565b608051610c6c610111600039600081816101130152818161017e015281816102680152818161032c0152818161046001528181610595015261068e0152610c6c6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b15ea33e1161005b578063b15ea33e146100ee578063b76f3c151461010e578063e0d6115e1461014d578063eebecf691461016057600080fd5b80636f1718121461008d5780637e39531e146100a2578063899b6b61146100b5578063a7e0c85e146100c8575b600080fd5b6100a061009b366004610790565b610173565b005b6100a06100b0366004610790565b61025d565b6100a06100c3366004610790565b610321565b6100db6100d636600461082f565b61042d565b6040519081526020015b60405180910390f35b6101016100fc3660046108bf565b6104f0565b6040516100e591906108d8565b6101357f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100e5565b6100a061015b366004610790565b61058a565b6100db61016e366004610926565b61065b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101f05760405162461bcd60e51b815260206004820152601b60248201527f53656e646572206e6f74204169726e6f64652070726f746f636f6c000000000060448201526064015b60405180910390fd5b826101fa8161071b565b61023c5760405162461bcd60e51b8152602060048201526013602482015272151a5b595cdd185b5c081b9bdd081d985b1a59606a1b60448201526064016101e7565b6000858152602081905260409020610255838583610a3f565b505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102d55760405162461bcd60e51b815260206004820152601b60248201527f53656e646572206e6f74204169726e6f64652070726f746f636f6c000000000060448201526064016101e7565b826102df8161071b565b6100885760405162461bcd60e51b8152602060048201526013602482015272151a5b595cdd185b5c081b9bdd081d985b1a59606a1b60448201526064016101e7565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103995760405162461bcd60e51b815260206004820152601b60248201527f53656e646572206e6f74204169726e6f64652070726f746f636f6c000000000060448201526064016101e7565b826103a38161071b565b6103e55760405162461bcd60e51b8152602060048201526013602482015272151a5b595cdd185b5c081b9bdd081d985b1a59606a1b60448201526064016101e7565b60405162461bcd60e51b815260206004820152600e60248201527f416c77617973207265766572747300000000000000000000000000000000000060448201526064016101e7565b6040517fa7e0c85e0000000000000000000000000000000000000000000000000000000081526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a7e0c85e906104a1908b908b908b908b908b908b908b90600401610b28565b6020604051808303816000875af11580156104c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e49190610b97565b98975050505050505050565b60006020819052908152604090208054610509906109ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610535906109ba565b80156105825780601f1061055757610100808354040283529160200191610582565b820191906000526020600020905b81548152906001019060200180831161056557829003601f168201915b505050505081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106025760405162461bcd60e51b815260206004820152601b60248201527f53656e646572206e6f74204169726e6f64652070726f746f636f6c000000000060448201526064016101e7565b8261060c8161071b565b61064e5760405162461bcd60e51b8152602060048201526013602482015272151a5b595cdd185b5c081b9bdd081d985b1a59606a1b60448201526064016101e7565b5b61064f565b5050505050565b6040517feebecf690000000000000000000000000000000000000000000000000000000081526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063eebecf69906106cd908a908a908a908a908a908a90600401610bb0565b6020604051808303816000875af11580156106ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107109190610b97565b979650505050505050565b60004261072a83610e10610c15565b118015610741575061073e42610e10610c15565b82105b92915050565b60008083601f84011261075957600080fd5b50813567ffffffffffffffff81111561077157600080fd5b60208301915083602082850101111561078957600080fd5b9250929050565b600080600080606085870312156107a657600080fd5b8435935060208501359250604085013567ffffffffffffffff8111156107cb57600080fd5b6107d787828801610747565b95989497509550505050565b80356001600160a01b03811681146107fa57600080fd5b919050565b80357fffffffff00000000000000000000000000000000000000000000000000000000811681146107fa57600080fd5b600080600080600080600060c0888a03121561084a57600080fd5b610853886107e3565b965060208801359550604088013567ffffffffffffffff81111561087657600080fd5b6108828a828b01610747565b90965094506108959050606089016107e3565b92506108a3608089016107e3565b91506108b160a089016107ff565b905092959891949750929550565b6000602082840312156108d157600080fd5b5035919050565b600060208083528351808285015260005b81811015610905578581018301518582016040015282016108e9565b506000604082860101526040601f19601f8301168501019250505092915050565b60008060008060008060a0878903121561093f57600080fd5b610948876107e3565b955060208701359450604087013567ffffffffffffffff81111561096b57600080fd5b61097789828a01610747565b909550935061098a9050606088016107e3565b9150610998608088016107ff565b90509295509295509295565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806109ce57607f821691505b6020821081036109ee57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610a3a57600081815260208120601f850160051c81016020861015610a1b5750805b601f850160051c820191505b8181101561025557828155600101610a27565b505050565b67ffffffffffffffff831115610a5757610a576109a4565b610a6b83610a6583546109ba565b836109f4565b6000601f841160018114610a9f5760008515610a875750838201355b600019600387901b1c1916600186901b178355610654565b600083815260209020601f19861690835b82811015610ad05786850135825560209485019460019092019101610ab0565b5086821015610aed5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808a16835288602084015260c06040840152610b5260c08401888a610aff565b95811660608401529390931660808201527fffffffff000000000000000000000000000000000000000000000000000000009190911660a09091015250949350505050565b600060208284031215610ba957600080fd5b5051919050565b60006001600160a01b03808916835287602084015260a06040840152610bda60a084018789610aff565b94166060830152507fffffffff0000000000000000000000000000000000000000000000000000000091909116608090910152949350505050565b8082018082111561074157634e487b7160e01b600052601160045260246000fdfea2646970667358221220a86d805ba5ae2e02b5fc470003bdd29dc1de21d2e366fdef775cfe80cd2c96ba64736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var MockAirnodeRequester__factory = /** @class */ (function (_super) {
    __extends(MockAirnodeRequester__factory, _super);
    function MockAirnodeRequester__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    MockAirnodeRequester__factory.prototype.deploy = function (_airnodeProtocol, overrides) {
        return _super.prototype.deploy.call(this, _airnodeProtocol, overrides || {});
    };
    MockAirnodeRequester__factory.prototype.getDeployTransaction = function (_airnodeProtocol, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _airnodeProtocol, overrides || {});
    };
    MockAirnodeRequester__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    MockAirnodeRequester__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    MockAirnodeRequester__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    MockAirnodeRequester__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    MockAirnodeRequester__factory.bytecode = _bytecode;
    MockAirnodeRequester__factory.abi = _abi;
    return MockAirnodeRequester__factory;
}(ethers_1.ContractFactory));
exports.MockAirnodeRequester__factory = MockAirnodeRequester__factory;
//# sourceMappingURL=MockAirnodeRequester__factory.js.map