"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockSponsor__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_airnodeProtocol",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "airnodeProtocol",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "claimBalance",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "airnodeOrRelayer",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "protocolId",
                type: "uint256",
            },
        ],
        name: "requestWithdrawal",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
var _bytecode = "0x60a060405234801561001057600080fd5b5060405161034f38038061034f83398101604081905261002f9161009c565b806001600160a01b03811661008a5760405162461bcd60e51b815260206004820152601c60248201527f4169726e6f646550726f746f636f6c2061646472657373207a65726f00000000604482015260640160405180910390fd5b6001600160a01b0316608052506100cc565b6000602082840312156100ae57600080fd5b81516001600160a01b03811681146100c557600080fd5b9392505050565b60805161025c6100f36000396000818160550152818160b50152610181015261025c6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806330509bca14610046578063b76f3c1514610050578063da95ebf7146100a0575b600080fd5b61004e6100b3565b005b6100777f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61004e6100ae3660046101e1565b610135565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166330509bca6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561011b57600080fd5b505af115801561012f573d6000803e3d6000fd5b50505050565b6040517fda95ebf700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063da95ebf790604401600060405180830381600087803b1580156101c557600080fd5b505af11580156101d9573d6000803e3d6000fd5b505050505050565b600080604083850312156101f457600080fd5b823573ffffffffffffffffffffffffffffffffffffffff8116811461021857600080fd5b94602093909301359350505056fea2646970667358221220570d590548a4624941e026c55c346e3142bfd51fd8153bd67208397bdf03085364736f6c63430008110033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var MockSponsor__factory = /** @class */ (function (_super) {
    __extends(MockSponsor__factory, _super);
    function MockSponsor__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    MockSponsor__factory.prototype.deploy = function (_airnodeProtocol, overrides) {
        return _super.prototype.deploy.call(this, _airnodeProtocol, overrides || {});
    };
    MockSponsor__factory.prototype.getDeployTransaction = function (_airnodeProtocol, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _airnodeProtocol, overrides || {});
    };
    MockSponsor__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    MockSponsor__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    MockSponsor__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    MockSponsor__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    MockSponsor__factory.bytecode = _bytecode;
    MockSponsor__factory.abi = _abi;
    return MockSponsor__factory;
}(ethers_1.ContractFactory));
exports.MockSponsor__factory = MockSponsor__factory;
//# sourceMappingURL=MockSponsor__factory.js.map