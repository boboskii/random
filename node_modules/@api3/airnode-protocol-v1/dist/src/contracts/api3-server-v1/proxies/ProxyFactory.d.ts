import type { BaseContract, BigNumber, BytesLike, CallOverrides, ContractTransaction, Overrides, PopulatedTransaction, Signer, utils } from "ethers";
import type { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent, PromiseOrValue } from "../../common";
export interface ProxyFactoryInterface extends utils.Interface {
    functions: {
        "api3ServerV1()": FunctionFragment;
        "computeDapiProxyAddress(bytes32,bytes)": FunctionFragment;
        "computeDapiProxyWithOevAddress(bytes32,address,bytes)": FunctionFragment;
        "computeDataFeedProxyAddress(bytes32,bytes)": FunctionFragment;
        "computeDataFeedProxyWithOevAddress(bytes32,address,bytes)": FunctionFragment;
        "deployDapiProxy(bytes32,bytes)": FunctionFragment;
        "deployDapiProxyWithOev(bytes32,address,bytes)": FunctionFragment;
        "deployDataFeedProxy(bytes32,bytes)": FunctionFragment;
        "deployDataFeedProxyWithOev(bytes32,address,bytes)": FunctionFragment;
    };
    getFunction(nameOrSignatureOrTopic: "api3ServerV1" | "computeDapiProxyAddress" | "computeDapiProxyWithOevAddress" | "computeDataFeedProxyAddress" | "computeDataFeedProxyWithOevAddress" | "deployDapiProxy" | "deployDapiProxyWithOev" | "deployDataFeedProxy" | "deployDataFeedProxyWithOev"): FunctionFragment;
    encodeFunctionData(functionFragment: "api3ServerV1", values?: undefined): string;
    encodeFunctionData(functionFragment: "computeDapiProxyAddress", values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]): string;
    encodeFunctionData(functionFragment: "computeDapiProxyWithOevAddress", values: [
        PromiseOrValue<BytesLike>,
        PromiseOrValue<string>,
        PromiseOrValue<BytesLike>
    ]): string;
    encodeFunctionData(functionFragment: "computeDataFeedProxyAddress", values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]): string;
    encodeFunctionData(functionFragment: "computeDataFeedProxyWithOevAddress", values: [
        PromiseOrValue<BytesLike>,
        PromiseOrValue<string>,
        PromiseOrValue<BytesLike>
    ]): string;
    encodeFunctionData(functionFragment: "deployDapiProxy", values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]): string;
    encodeFunctionData(functionFragment: "deployDapiProxyWithOev", values: [
        PromiseOrValue<BytesLike>,
        PromiseOrValue<string>,
        PromiseOrValue<BytesLike>
    ]): string;
    encodeFunctionData(functionFragment: "deployDataFeedProxy", values: [PromiseOrValue<BytesLike>, PromiseOrValue<BytesLike>]): string;
    encodeFunctionData(functionFragment: "deployDataFeedProxyWithOev", values: [
        PromiseOrValue<BytesLike>,
        PromiseOrValue<string>,
        PromiseOrValue<BytesLike>
    ]): string;
    decodeFunctionResult(functionFragment: "api3ServerV1", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "computeDapiProxyAddress", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "computeDapiProxyWithOevAddress", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "computeDataFeedProxyAddress", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "computeDataFeedProxyWithOevAddress", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "deployDapiProxy", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "deployDapiProxyWithOev", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "deployDataFeedProxy", data: BytesLike): Result;
    decodeFunctionResult(functionFragment: "deployDataFeedProxyWithOev", data: BytesLike): Result;
    events: {
        "DeployedDapiProxy(address,bytes32,bytes)": EventFragment;
        "DeployedDapiProxyWithOev(address,bytes32,address,bytes)": EventFragment;
        "DeployedDataFeedProxy(address,bytes32,bytes)": EventFragment;
        "DeployedDataFeedProxyWithOev(address,bytes32,address,bytes)": EventFragment;
    };
    getEvent(nameOrSignatureOrTopic: "DeployedDapiProxy"): EventFragment;
    getEvent(nameOrSignatureOrTopic: "DeployedDapiProxyWithOev"): EventFragment;
    getEvent(nameOrSignatureOrTopic: "DeployedDataFeedProxy"): EventFragment;
    getEvent(nameOrSignatureOrTopic: "DeployedDataFeedProxyWithOev"): EventFragment;
}
export interface DeployedDapiProxyEventObject {
    proxyAddress: string;
    dapiName: string;
    metadata: string;
}
export type DeployedDapiProxyEvent = TypedEvent<[
    string,
    string,
    string
], DeployedDapiProxyEventObject>;
export type DeployedDapiProxyEventFilter = TypedEventFilter<DeployedDapiProxyEvent>;
export interface DeployedDapiProxyWithOevEventObject {
    proxyAddress: string;
    dapiName: string;
    oevBeneficiary: string;
    metadata: string;
}
export type DeployedDapiProxyWithOevEvent = TypedEvent<[
    string,
    string,
    string,
    string
], DeployedDapiProxyWithOevEventObject>;
export type DeployedDapiProxyWithOevEventFilter = TypedEventFilter<DeployedDapiProxyWithOevEvent>;
export interface DeployedDataFeedProxyEventObject {
    proxyAddress: string;
    dataFeedId: string;
    metadata: string;
}
export type DeployedDataFeedProxyEvent = TypedEvent<[
    string,
    string,
    string
], DeployedDataFeedProxyEventObject>;
export type DeployedDataFeedProxyEventFilter = TypedEventFilter<DeployedDataFeedProxyEvent>;
export interface DeployedDataFeedProxyWithOevEventObject {
    proxyAddress: string;
    dataFeedId: string;
    oevBeneficiary: string;
    metadata: string;
}
export type DeployedDataFeedProxyWithOevEvent = TypedEvent<[
    string,
    string,
    string,
    string
], DeployedDataFeedProxyWithOevEventObject>;
export type DeployedDataFeedProxyWithOevEventFilter = TypedEventFilter<DeployedDataFeedProxyWithOevEvent>;
export interface ProxyFactory extends BaseContract {
    connect(signerOrProvider: Signer | Provider | string): this;
    attach(addressOrName: string): this;
    deployed(): Promise<this>;
    interface: ProxyFactoryInterface;
    queryFilter<TEvent extends TypedEvent>(event: TypedEventFilter<TEvent>, fromBlockOrBlockhash?: string | number | undefined, toBlock?: string | number | undefined): Promise<Array<TEvent>>;
    listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>;
    listeners(eventName?: string): Array<Listener>;
    removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this;
    removeAllListeners(eventName?: string): this;
    off: OnEvent<this>;
    on: OnEvent<this>;
    once: OnEvent<this>;
    removeListener: OnEvent<this>;
    functions: {
        api3ServerV1(overrides?: CallOverrides): Promise<[string]>;
        computeDapiProxyAddress(dapiName: PromiseOrValue<BytesLike>, metadata: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<[string] & {
            proxyAddress: string;
        }>;
        computeDapiProxyWithOevAddress(dapiName: PromiseOrValue<BytesLike>, oevBeneficiary: PromiseOrValue<string>, metadata: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<[string] & {
            proxyAddress: string;
        }>;
        computeDataFeedProxyAddress(dataFeedId: PromiseOrValue<BytesLike>, metadata: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<[string] & {
            proxyAddress: string;
        }>;
        computeDataFeedProxyWithOevAddress(dataFeedId: PromiseOrValue<BytesLike>, oevBeneficiary: PromiseOrValue<string>, metadata: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<[string] & {
            proxyAddress: string;
        }>;
        deployDapiProxy(dapiName: PromiseOrValue<BytesLike>, metadata: PromiseOrValue<BytesLike>, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<ContractTransaction>;
        deployDapiProxyWithOev(dapiName: PromiseOrValue<BytesLike>, oevBeneficiary: PromiseOrValue<string>, metadata: PromiseOrValue<BytesLike>, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<ContractTransaction>;
        deployDataFeedProxy(dataFeedId: PromiseOrValue<BytesLike>, metadata: PromiseOrValue<BytesLike>, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<ContractTransaction>;
        deployDataFeedProxyWithOev(dataFeedId: PromiseOrValue<BytesLike>, oevBeneficiary: PromiseOrValue<string>, metadata: PromiseOrValue<BytesLike>, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<ContractTransaction>;
    };
    api3ServerV1(overrides?: CallOverrides): Promise<string>;
    computeDapiProxyAddress(dapiName: PromiseOrValue<BytesLike>, metadata: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<string>;
    computeDapiProxyWithOevAddress(dapiName: PromiseOrValue<BytesLike>, oevBeneficiary: PromiseOrValue<string>, metadata: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<string>;
    computeDataFeedProxyAddress(dataFeedId: PromiseOrValue<BytesLike>, metadata: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<string>;
    computeDataFeedProxyWithOevAddress(dataFeedId: PromiseOrValue<BytesLike>, oevBeneficiary: PromiseOrValue<string>, metadata: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<string>;
    deployDapiProxy(dapiName: PromiseOrValue<BytesLike>, metadata: PromiseOrValue<BytesLike>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<ContractTransaction>;
    deployDapiProxyWithOev(dapiName: PromiseOrValue<BytesLike>, oevBeneficiary: PromiseOrValue<string>, metadata: PromiseOrValue<BytesLike>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<ContractTransaction>;
    deployDataFeedProxy(dataFeedId: PromiseOrValue<BytesLike>, metadata: PromiseOrValue<BytesLike>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<ContractTransaction>;
    deployDataFeedProxyWithOev(dataFeedId: PromiseOrValue<BytesLike>, oevBeneficiary: PromiseOrValue<string>, metadata: PromiseOrValue<BytesLike>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<ContractTransaction>;
    callStatic: {
        api3ServerV1(overrides?: CallOverrides): Promise<string>;
        computeDapiProxyAddress(dapiName: PromiseOrValue<BytesLike>, metadata: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<string>;
        computeDapiProxyWithOevAddress(dapiName: PromiseOrValue<BytesLike>, oevBeneficiary: PromiseOrValue<string>, metadata: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<string>;
        computeDataFeedProxyAddress(dataFeedId: PromiseOrValue<BytesLike>, metadata: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<string>;
        computeDataFeedProxyWithOevAddress(dataFeedId: PromiseOrValue<BytesLike>, oevBeneficiary: PromiseOrValue<string>, metadata: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<string>;
        deployDapiProxy(dapiName: PromiseOrValue<BytesLike>, metadata: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<string>;
        deployDapiProxyWithOev(dapiName: PromiseOrValue<BytesLike>, oevBeneficiary: PromiseOrValue<string>, metadata: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<string>;
        deployDataFeedProxy(dataFeedId: PromiseOrValue<BytesLike>, metadata: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<string>;
        deployDataFeedProxyWithOev(dataFeedId: PromiseOrValue<BytesLike>, oevBeneficiary: PromiseOrValue<string>, metadata: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<string>;
    };
    filters: {
        "DeployedDapiProxy(address,bytes32,bytes)"(proxyAddress?: PromiseOrValue<string> | null, dapiName?: PromiseOrValue<BytesLike> | null, metadata?: null): DeployedDapiProxyEventFilter;
        DeployedDapiProxy(proxyAddress?: PromiseOrValue<string> | null, dapiName?: PromiseOrValue<BytesLike> | null, metadata?: null): DeployedDapiProxyEventFilter;
        "DeployedDapiProxyWithOev(address,bytes32,address,bytes)"(proxyAddress?: PromiseOrValue<string> | null, dapiName?: PromiseOrValue<BytesLike> | null, oevBeneficiary?: null, metadata?: null): DeployedDapiProxyWithOevEventFilter;
        DeployedDapiProxyWithOev(proxyAddress?: PromiseOrValue<string> | null, dapiName?: PromiseOrValue<BytesLike> | null, oevBeneficiary?: null, metadata?: null): DeployedDapiProxyWithOevEventFilter;
        "DeployedDataFeedProxy(address,bytes32,bytes)"(proxyAddress?: PromiseOrValue<string> | null, dataFeedId?: PromiseOrValue<BytesLike> | null, metadata?: null): DeployedDataFeedProxyEventFilter;
        DeployedDataFeedProxy(proxyAddress?: PromiseOrValue<string> | null, dataFeedId?: PromiseOrValue<BytesLike> | null, metadata?: null): DeployedDataFeedProxyEventFilter;
        "DeployedDataFeedProxyWithOev(address,bytes32,address,bytes)"(proxyAddress?: PromiseOrValue<string> | null, dataFeedId?: PromiseOrValue<BytesLike> | null, oevBeneficiary?: null, metadata?: null): DeployedDataFeedProxyWithOevEventFilter;
        DeployedDataFeedProxyWithOev(proxyAddress?: PromiseOrValue<string> | null, dataFeedId?: PromiseOrValue<BytesLike> | null, oevBeneficiary?: null, metadata?: null): DeployedDataFeedProxyWithOevEventFilter;
    };
    estimateGas: {
        api3ServerV1(overrides?: CallOverrides): Promise<BigNumber>;
        computeDapiProxyAddress(dapiName: PromiseOrValue<BytesLike>, metadata: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<BigNumber>;
        computeDapiProxyWithOevAddress(dapiName: PromiseOrValue<BytesLike>, oevBeneficiary: PromiseOrValue<string>, metadata: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<BigNumber>;
        computeDataFeedProxyAddress(dataFeedId: PromiseOrValue<BytesLike>, metadata: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<BigNumber>;
        computeDataFeedProxyWithOevAddress(dataFeedId: PromiseOrValue<BytesLike>, oevBeneficiary: PromiseOrValue<string>, metadata: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<BigNumber>;
        deployDapiProxy(dapiName: PromiseOrValue<BytesLike>, metadata: PromiseOrValue<BytesLike>, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<BigNumber>;
        deployDapiProxyWithOev(dapiName: PromiseOrValue<BytesLike>, oevBeneficiary: PromiseOrValue<string>, metadata: PromiseOrValue<BytesLike>, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<BigNumber>;
        deployDataFeedProxy(dataFeedId: PromiseOrValue<BytesLike>, metadata: PromiseOrValue<BytesLike>, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<BigNumber>;
        deployDataFeedProxyWithOev(dataFeedId: PromiseOrValue<BytesLike>, oevBeneficiary: PromiseOrValue<string>, metadata: PromiseOrValue<BytesLike>, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<BigNumber>;
    };
    populateTransaction: {
        api3ServerV1(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        computeDapiProxyAddress(dapiName: PromiseOrValue<BytesLike>, metadata: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        computeDapiProxyWithOevAddress(dapiName: PromiseOrValue<BytesLike>, oevBeneficiary: PromiseOrValue<string>, metadata: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        computeDataFeedProxyAddress(dataFeedId: PromiseOrValue<BytesLike>, metadata: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        computeDataFeedProxyWithOevAddress(dataFeedId: PromiseOrValue<BytesLike>, oevBeneficiary: PromiseOrValue<string>, metadata: PromiseOrValue<BytesLike>, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        deployDapiProxy(dapiName: PromiseOrValue<BytesLike>, metadata: PromiseOrValue<BytesLike>, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<PopulatedTransaction>;
        deployDapiProxyWithOev(dapiName: PromiseOrValue<BytesLike>, oevBeneficiary: PromiseOrValue<string>, metadata: PromiseOrValue<BytesLike>, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<PopulatedTransaction>;
        deployDataFeedProxy(dataFeedId: PromiseOrValue<BytesLike>, metadata: PromiseOrValue<BytesLike>, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<PopulatedTransaction>;
        deployDataFeedProxyWithOev(dataFeedId: PromiseOrValue<BytesLike>, oevBeneficiary: PromiseOrValue<string>, metadata: PromiseOrValue<BytesLike>, overrides?: Overrides & {
            from?: PromiseOrValue<string>;
        }): Promise<PopulatedTransaction>;
    };
}
