import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IAuthorizationUtilsV0, IAuthorizationUtilsV0Interface } from "../../../rrp/interfaces/IAuthorizationUtilsV0";
export declare class IAuthorizationUtilsV0__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "authorizers";
            readonly type: "address[]";
        }, {
            readonly internalType: "address";
            readonly name: "airnode";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "requestId";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "endpointId";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "sponsor";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "requester";
            readonly type: "address";
        }];
        readonly name: "checkAuthorizationStatus";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "status";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "authorizers";
            readonly type: "address[]";
        }, {
            readonly internalType: "address";
            readonly name: "airnode";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32[]";
            readonly name: "requestIds";
            readonly type: "bytes32[]";
        }, {
            readonly internalType: "bytes32[]";
            readonly name: "endpointIds";
            readonly type: "bytes32[]";
        }, {
            readonly internalType: "address[]";
            readonly name: "sponsors";
            readonly type: "address[]";
        }, {
            readonly internalType: "address[]";
            readonly name: "requesters";
            readonly type: "address[]";
        }];
        readonly name: "checkAuthorizationStatuses";
        readonly outputs: readonly [{
            readonly internalType: "bool[]";
            readonly name: "statuses";
            readonly type: "bool[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): IAuthorizationUtilsV0Interface;
    static connect(address: string, signerOrProvider: Signer | Provider): IAuthorizationUtilsV0;
}
//# sourceMappingURL=IAuthorizationUtilsV0__factory.d.ts.map