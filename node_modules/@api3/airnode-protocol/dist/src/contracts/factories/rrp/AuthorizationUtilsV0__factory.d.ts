import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AuthorizationUtilsV0, AuthorizationUtilsV0Interface } from "../../rrp/AuthorizationUtilsV0";
type AuthorizationUtilsV0ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class AuthorizationUtilsV0__factory extends ContractFactory {
    constructor(...args: AuthorizationUtilsV0ConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string;
    }): Promise<AuthorizationUtilsV0>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): AuthorizationUtilsV0;
    connect(signer: Signer): AuthorizationUtilsV0__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50610663806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638a33be011461003b578063ca31d58614610063575b600080fd5b61004e6100493660046103c1565b610083565b60405190151581526020015b60405180910390f35b61007661007136600461044a565b6101ad565b60405161005a919061054e565b6000805b8781101561019c5760008989838181106100a3576100a3610594565b90506020020160208101906100b891906105aa565b6040517f29b915b30000000000000000000000000000000000000000000000000000000081526004810189905273ffffffffffffffffffffffffffffffffffffffff8a811660248301526044820189905287811660648301528681166084830152919250908216906329b915b39060a40160206040518083038186803b15801561014157600080fd5b505afa158015610155573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017991906105cc565b15610189576001925050506101a2565b5080610194816105ee565b915050610087565b50600090505b979650505050505050565b606087861480156101bd57508784145b80156101c857508782145b610232576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f556e657175616c20706172616d65746572206c656e6774687300000000000000604482015260640160405180910390fd5b8767ffffffffffffffff81111561024b5761024b610617565b604051908082528060200260200182016040528015610274578160200160208202803683370190505b50905060005b8881101561033c576103088d8d8d8d8d8681811061029a5761029a610594565b905060200201358c8c878181106102b3576102b3610594565b905060200201358b8b888181106102cc576102cc610594565b90506020020160208101906102e191906105aa565b8a8a898181106102f3576102f3610594565b905060200201602081019061004991906105aa565b82828151811061031a5761031a610594565b9115156020928302919091019091015280610334816105ee565b91505061027a565b509b9a5050505050505050505050565b60008083601f84011261035e57600080fd5b50813567ffffffffffffffff81111561037657600080fd5b6020830191508360208260051b850101111561039157600080fd5b9250929050565b803573ffffffffffffffffffffffffffffffffffffffff811681146103bc57600080fd5b919050565b600080600080600080600060c0888a0312156103dc57600080fd5b873567ffffffffffffffff8111156103f357600080fd5b6103ff8a828b0161034c565b9098509650610412905060208901610398565b9450604088013593506060880135925061042e60808901610398565b915061043c60a08901610398565b905092959891949750929550565b600080600080600080600080600080600060c08c8e03121561046b57600080fd5b67ffffffffffffffff808d35111561048257600080fd5b61048f8e8e358f0161034c565b909c509a506104a060208e01610398565b99508060408e013511156104b357600080fd5b6104c38e60408f01358f0161034c565b909950975060608d01358110156104d957600080fd5b6104e98e60608f01358f0161034c565b909750955060808d01358110156104ff57600080fd5b61050f8e60808f01358f0161034c565b909550935060a08d013581101561052557600080fd5b506105368d60a08e01358e0161034c565b81935080925050509295989b509295989b9093969950565b6020808252825182820181905260009190848201906040850190845b8181101561058857835115158352928401929184019160010161056a565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156105bc57600080fd5b6105c582610398565b9392505050565b6000602082840312156105de57600080fd5b815180151581146105c557600080fd5b600060001982141561061057634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea26469706673582212209077f67fbfa33282f49a460ae406b26fee81960dc60bd853ca6b3f821155be0464736f6c63430008090033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "authorizers";
            readonly type: "address[]";
        }, {
            readonly internalType: "address";
            readonly name: "airnode";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "requestId";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "endpointId";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "sponsor";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "requester";
            readonly type: "address";
        }];
        readonly name: "checkAuthorizationStatus";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "status";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "authorizers";
            readonly type: "address[]";
        }, {
            readonly internalType: "address";
            readonly name: "airnode";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32[]";
            readonly name: "requestIds";
            readonly type: "bytes32[]";
        }, {
            readonly internalType: "bytes32[]";
            readonly name: "endpointIds";
            readonly type: "bytes32[]";
        }, {
            readonly internalType: "address[]";
            readonly name: "sponsors";
            readonly type: "address[]";
        }, {
            readonly internalType: "address[]";
            readonly name: "requesters";
            readonly type: "address[]";
        }];
        readonly name: "checkAuthorizationStatuses";
        readonly outputs: readonly [{
            readonly internalType: "bool[]";
            readonly name: "statuses";
            readonly type: "bool[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): AuthorizationUtilsV0Interface;
    static connect(address: string, signerOrProvider: Signer | Provider): AuthorizationUtilsV0;
}
export {};
//# sourceMappingURL=AuthorizationUtilsV0__factory.d.ts.map