"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockRrpRequesterV0__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "airnodeRrpAddress",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "requestId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "FulfilledRequest",
        type: "event",
    },
    {
        inputs: [],
        name: "airnodeRrp",
        outputs: [
            {
                internalType: "contract IAirnodeRrpV0",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "requestId",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "fulfill",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "requestId",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "fulfillAlwaysReverts",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "requestId",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "fulfillAlwaysRevertsWithNoString",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "requestId",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "fulfillAlwaysRunsOutOfGas",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "airnode",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "endpointId",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "sponsor",
                type: "address",
            },
            {
                internalType: "address",
                name: "sponsorWallet",
                type: "address",
            },
            {
                internalType: "address",
                name: "fulfillAddress",
                type: "address",
            },
            {
                internalType: "bytes4",
                name: "fulfillFunctionId",
                type: "bytes4",
            },
            {
                internalType: "bytes",
                name: "parameters",
                type: "bytes",
            },
        ],
        name: "makeFullRequest",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "templateId",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "sponsor",
                type: "address",
            },
            {
                internalType: "address",
                name: "sponsorWallet",
                type: "address",
            },
            {
                internalType: "address",
                name: "fulfillAddress",
                type: "address",
            },
            {
                internalType: "bytes4",
                name: "fulfillFunctionId",
                type: "bytes4",
            },
            {
                internalType: "bytes",
                name: "parameters",
                type: "bytes",
            },
        ],
        name: "makeTemplateRequest",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        name: "requestIdToData",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "airnode",
                type: "address",
            },
            {
                internalType: "address",
                name: "sponsorWallet",
                type: "address",
            },
        ],
        name: "requestWithdrawal",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60a060405234801561001057600080fd5b50604051610dd7380380610dd783398101604081905261002f9161009d565b6001600160a01b0381166080819052604051632b77c09f60e21b81523060048201526001602482015282919063addf027c90604401600060405180830381600087803b15801561007e57600080fd5b505af1158015610092573d6000803e3d6000fd5b5050505050506100cd565b6000602082840312156100af57600080fd5b81516001600160a01b03811681146100c657600080fd5b9392505050565b608051610cbf6101186000396000818160d5015281816101d3015281816102660152818161032d01528181610472015281816105180152818161067601526106ee0152610cbf6000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063a595720111610076578063b15ea33e1161005b578063b15ea33e1461014d578063b893da251461016d578063fac357361461018057600080fd5b8063a595720114610127578063acbe18001461013a57600080fd5b80631d414cbd146100a85780636e6be03f146100bd57806371bab666146100d05780637c1de7e114610114575b600080fd5b6100bb6100b6366004610858565b610193565b005b6100bb6100cb366004610904565b610233565b6100f77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100bb6101223660046109a4565b610322565b6100bb6101353660046109a4565b610467565b6100bb6101483660046109f0565b6104e5565b61016061015b366004610a80565b6105d1565b60405161010b9190610a99565b6100bb61017b3660046109a4565b61066b565b6100bb61018e3660046109a4565b6106e3565b6040517f1d414cbd0000000000000000000000000000000000000000000000000000000081526001600160a01b03838116600483015282811660248301527f00000000000000000000000000000000000000000000000000000000000000001690631d414cbd90604401600060405180830381600087803b15801561021757600080fd5b505af115801561022b573d6000803e3d6000fd5b505050505050565b6040517f6e6be03f0000000000000000000000000000000000000000000000000000000081526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636e6be03f906102a9908c908c908c908c908c908c908c908c90600401610b17565b602060405180830381600087803b1580156102c357600080fd5b505af11580156102d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fb9190610b90565b6000908152600160208190526040909120805460ff19169091179055505050505050505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461039f5760405162461bcd60e51b815260206004820152601660248201527f43616c6c6572206e6f74204169726e6f6465205252500000000000000000000060448201526064015b60405180910390fd5b60008381526001602052604090205460ff166103fd5760405162461bcd60e51b815260206004820152601460248201527f4e6f20737563682072657175657374206d6164650000000000000000000000006044820152606401610396565b6000838152600160209081526040808320805460ff191690559082905290206104279083836107a3565b50827fd3d33a3df7edd9af0a12c4972f8f3d63fcdf3126828b82707c5196e301efad80838360405161045a929190610ba9565b60405180910390a2505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104df5760405162461bcd60e51b815260206004820152601660248201527f43616c6c6572206e6f74204169726e6f646520525250000000000000000000006044820152606401610396565b5b6104e0565b6040517facbe18000000000000000000000000000000000000000000000000000000000081526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063acbe180090610559908b908b908b908b908b908b908b90600401610bc5565b602060405180830381600087803b15801561057357600080fd5b505af1158015610587573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ab9190610b90565b6000908152600160208190526040909120805460ff191690911790555050505050505050565b600060208190529081526040902080546105ea90610c35565b80601f016020809104026020016040519081016040528092919081815260200182805461061690610c35565b80156106635780601f1061063857610100808354040283529160200191610663565b820191906000526020600020905b81548152906001019060200180831161064657829003601f168201915b505050505081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146100a35760405162461bcd60e51b815260206004820152601660248201527f43616c6c6572206e6f74204169726e6f646520525250000000000000000000006044820152606401610396565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461075b5760405162461bcd60e51b815260206004820152601660248201527f43616c6c6572206e6f74204169726e6f646520525250000000000000000000006044820152606401610396565b60405162461bcd60e51b815260206004820152600e60248201527f416c7761797320726576657274730000000000000000000000000000000000006044820152606401610396565b8280546107af90610c35565b90600052602060002090601f0160209004810192826107d15760008555610817565b82601f106107ea5782800160ff19823516178555610817565b82800160010185558215610817579182015b828111156108175782358255916020019190600101906107fc565b50610823929150610827565b5090565b5b808211156108235760008155600101610828565b80356001600160a01b038116811461085357600080fd5b919050565b6000806040838503121561086b57600080fd5b6108748361083c565b91506108826020840161083c565b90509250929050565b80357fffffffff000000000000000000000000000000000000000000000000000000008116811461085357600080fd5b60008083601f8401126108cd57600080fd5b50813567ffffffffffffffff8111156108e557600080fd5b6020830191508360208285010111156108fd57600080fd5b9250929050565b60008060008060008060008060e0898b03121561092057600080fd5b6109298961083c565b97506020890135965061093e60408a0161083c565b955061094c60608a0161083c565b945061095a60808a0161083c565b935061096860a08a0161088b565b925060c089013567ffffffffffffffff81111561098457600080fd5b6109908b828c016108bb565b999c989b5096995094979396929594505050565b6000806000604084860312156109b957600080fd5b83359250602084013567ffffffffffffffff8111156109d757600080fd5b6109e3868287016108bb565b9497909650939450505050565b600080600080600080600060c0888a031215610a0b57600080fd5b87359650610a1b6020890161083c565b9550610a296040890161083c565b9450610a376060890161083c565b9350610a456080890161088b565b925060a088013567ffffffffffffffff811115610a6157600080fd5b610a6d8a828b016108bb565b989b979a50959850939692959293505050565b600060208284031215610a9257600080fd5b5035919050565b600060208083528351808285015260005b81811015610ac657858101830151858201604001528201610aaa565b81811115610ad8576000604083870101525b50601f01601f1916929092016040019392505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808b168352896020840152808916604084015280881660608401528087166080840152507fffffffff00000000000000000000000000000000000000000000000000000000851660a083015260e060c0830152610b8260e083018486610aee565b9a9950505050505050505050565b600060208284031215610ba257600080fd5b5051919050565b602081526000610bbd602083018486610aee565b949350505050565b87815260006001600160a01b03808916602084015280881660408401528087166060840152507fffffffff000000000000000000000000000000000000000000000000000000008516608083015260c060a0830152610c2860c083018486610aee565b9998505050505050505050565b600181811c90821680610c4957607f821691505b60208210811415610c83577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea26469706673582212203df4e3ed5095c72da0ebd6230166f216e665017d5beeedfe65704e3cf79f4f7264736f6c63430008090033";
const isSuperArgs = (xs) => xs.length > 1;
class MockRrpRequesterV0__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(airnodeRrpAddress, overrides) {
        return super.deploy(airnodeRrpAddress, overrides || {});
    }
    getDeployTransaction(airnodeRrpAddress, overrides) {
        return super.getDeployTransaction(airnodeRrpAddress, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MockRrpRequesterV0__factory = MockRrpRequesterV0__factory;
MockRrpRequesterV0__factory.bytecode = _bytecode;
MockRrpRequesterV0__factory.abi = _abi;
//# sourceMappingURL=MockRrpRequesterV0__factory.js.map