import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IWithdrawalUtilsV0, IWithdrawalUtilsV0Interface } from "../../../rrp/interfaces/IWithdrawalUtilsV0";
export declare class IWithdrawalUtilsV0__factory {
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "airnode";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sponsor";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "withdrawalRequestId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "sponsorWallet";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "FulfilledWithdrawal";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "airnode";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sponsor";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "withdrawalRequestId";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "sponsorWallet";
            readonly type: "address";
        }];
        readonly name: "RequestedWithdrawal";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "withdrawalRequestId";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "airnode";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "sponsor";
            readonly type: "address";
        }];
        readonly name: "fulfillWithdrawal";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "airnode";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "sponsorWallet";
            readonly type: "address";
        }];
        readonly name: "requestWithdrawal";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "sponsor";
            readonly type: "address";
        }];
        readonly name: "sponsorToWithdrawalRequestCount";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "withdrawalRequestCount";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): IWithdrawalUtilsV0Interface;
    static connect(address: string, signerOrProvider: Signer | Provider): IWithdrawalUtilsV0;
}
//# sourceMappingURL=IWithdrawalUtilsV0__factory.d.ts.map